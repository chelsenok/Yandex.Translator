package com.chelsenok.translator.backend.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig translationResultDaoConfig;

    private final TranslationResultDao translationResultDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        translationResultDaoConfig = daoConfigMap.get(TranslationResultDao.class).clone();
        translationResultDaoConfig.initIdentityScope(type);

        translationResultDao = new TranslationResultDao(translationResultDaoConfig, this);

        registerDao(TranslationResult.class, translationResultDao);
    }
    
    public void clear() {
        translationResultDaoConfig.clearIdentityScope();
    }

    public TranslationResultDao getTranslationResultDao() {
        return translationResultDao;
    }

}
